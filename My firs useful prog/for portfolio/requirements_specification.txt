ohlc_setup:
Поиграем на бирже

На вход программе подается файл, содержащий биржевые сделки в формате .csv (тикер, цена акции, количество купленных акций,
время валидации сделки). (файл - trades.csv)

На выходе ваша программа предоставляет обработанные данные для построения свечных графиков с масштабами 5 минут , 30 минут и 240 минут(
ohlc_5min.csv, ohlc_30min.csv, ohlc_240min.csv)

Детали ТЗ:
1)Cделки в csv, поданные на вход, отсортированы по времени по возрастанию
2)Cделки в csv представлены по нескольким акциям, то есть могут встречаться несколько разных тикеров акций
3)На выходе требуется получить данные, сгруппированные по масштабам, отсортированные по времени по возрастанию
4)Время проведения торгов: начало в 7 утра каждого дня, торги завершаются в 3 часа ночи следующего дня (по факту, это не так,
но мы будем ориентироваться на эти цифры)
Cделки, осуществленные вне времени проведения торгов считаются недействительными, то есть их не учитываем при построении свечных
аггрегатов
5) Решение должно быть выложено на GitHub. Необходимо создать ветку deveopment и сделать запрос (PullRequest) на  слияение
development в master. В апруеверы необходимо добавить пользователя с ником vlasove. 


ohlc_cli:
Продолжаем играть на бирже:

После выполнения задачи ohlc_setup.py, в которой вы скорее всего, явно укажите название входного файла,
необхоимо сделать ее более гибкой.
Для этого воспользуемся либой https://docs.python.org/2/library/optparse.html 'optparse'  или
https://docs.python.org/2/library/argparse.html 'argparse' и научим принимать нашу программу
путь до файла со сделками из command line. 


Запуск вашей программы должен выглядеть как : 
 python ohlc_script.py --file=%path_to_%trades.csv или 
 python ohlc_script.py [--file %path_to_%trades.csv ]

Дополнительно ваша программа должна иметь флажок --help: с коротким описанием доступных CLI-команд
Добавьте флаг --full_info отображающий короткое описание всех используемых функций